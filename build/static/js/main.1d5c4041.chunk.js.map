{"version":3,"sources":["components/Card/Card.module.scss","components/Search/Search.module.scss","components/Search/Search.js","components/Card/Card.js","components/Pagination/Pagination.js","components/Filter/FilterBTN.js","components/Filter/category/Gender.js","components/Filter/category/Species.js","components/Filter/category/Status.js","components/Filter/Filter.js","components/Navbar/Navbar.js","components/Filter/category/InputGroup.js","Pages/Episodes.js","Pages/Location.js","components/Card/CardDetails.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Search","setSearch","updatePageNumber","className","styles","search","onChange","e","target","value","placeholder","input","type","onClick","preventDefault","btn","Card","display","page","results","map","x","id","image","name","status","location","style","textDecoration","to","card","img","src","alt","badge","content","Pagination","pageNumber","info","useState","window","innerWidth","width","setWidth","updateDimensions","useEffect","addEventListener","removeEventListener","jsx","forcePage","marginPagesDisplayed","pageRangeDisplayed","pageCount","pages","onPageChange","data","selected","nextLabel","previousLabel","previousClassName","nextClassName","activeClassName","pageClassName","pageLinkClassName","FilterBTN","task","index","for","Gender","updateGender","items","Species","updateSpecies","item","Status","updateStatus","Filter","cursor","reload","Navbar","ClassName","class","InputGroup","changeID","total","Array","keys","Episodes","React","setResults","setInfo","air_date","episode","setID","api","a","fetch","then","res","json","Promise","all","characters","Location","dimension","number","setNumber","residents","classNae","CardDetails","useParams","fetchedData","updateFetchedDaata","gender","origin","species","classname","Home","updateFetchedData","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d5c4041.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__35wN0\",\"content\":\"Card_content__1AEDp\",\"img\":\"Card_img__1qgJC\",\"badge\":\"Card_badge__21uzr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Search_input__3iTQH\",\"btrn\":\"Search_btrn__2XEYi\"};","import React from \"react\";\nimport styles from \"./Search.module.scss\";\n\nconst Search = ({ setSearch, updatePageNumber }) => {\n    let searchBtn = (e) => {\n        e.preventDefault();\n    };\n\n    return (\n        <form\n            className={`${styles.search} d-flex flex-sm-row flex-column align-items-center justify-content-center gap-4 mb-5`}\n        >\n        <input\n            onChange={(e) => {\n                updatePageNumber(1);\n                setSearch(e.target.value);\n            }}\n            placeholder=\"Search for Characters\"\n            className={styles.input}\n            type=\"text\"\n        />\n        <button\n            onClick={searchBtn}\n            className={`${styles.btn} btn btn-primary fs-5`}\n        >\n            Search\n        </button>\n        </form>\n    );\n\n    \n};\n\nexport default Search;","import { Carousel } from \"bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Card.module.scss\";\n\nconst Card = ({ page, results }) => {\n    let display;\n\n    if (results) {\n        display = results.map((x) => {\n            let { id, image, name, status, location } = x;\n\n            return (\n                <Link\n                    style={{ textDecoration: \"none\" }}\n                    to={`${page}${id}`}\n                    key={id}\n                    className=\"col-lg-4 col-md-6 col-sm-6 col-12 mb-4 position-relative text-dark\"\n                >\n                    <div\n                        key={id}\n                        className=\"col-lg-4 col-md-6 col-sm-6 col-12 mb-4 position-relative text-dark\"\n                    >\n                        <div className={ `${styles.card} d-flex flex-column justify-content-center`}>\n                            <img className={`${styles.img} img-fluid`} src={image} alt=\"\" />\n                            {\n                                (() => {\n                                    if (status === \"Dead\") {\n                                        return (\n                                            <div className={`${styles.badge} position-absolute badge bg-danger`}>\n                                                {status}\n                                            </div>\n                                        );\n                                    } else if (status === \"Alive\") {\n                                        return (\n                                            <div className={`${styles.badge} position-absolute badge bg-success`}>\n                                                {status}\n                                            </div>\n                                        )\n                                    } else {\n                                        return (\n                                            <div \n                                                className={`${styles.badge} position-absolute badge bg-secondary`}\n                                            >\n                                                {status}\n                                            </div>\n                                        );\n                                    }\n                                })()}\n\n                            <div className={`${styles.content}`}>\n                                <div className=\"fs-5 fw-bold mb-4\">{name}</div>\n                                <div className=\"\">\n                                    <div className=\"fs-6 fw-normal\">Last Location</div>\n                                    <div className=\"fs-5\">{location.name}</div>\n                                </div>\n                            </div>\n                        </div> \n                    </div>\n                </Link>\n            );\n        });\n    } else {\n        display = \"No Characters Found :/\";\n    }\n\n    return <>{display}</>\n}\n\nexport default Card;","import React, { useState, useEffect } from \"react\";\nimport ReactPaginate from \"react-paginate\";\n\nconst Pagination = ({ pageNumber, info , updatePageNumber }) => {\n    let pageChange = (data) => {\n        updatePageNumber(data.selected + 1);\n    };\n\n    const [width, setWidth] = useState(window.innerWidth);\n    const updateDimensions = () => {\n        setWidth(window.innerWidth);\n    };\n    useEffect(() => {\n        window.addEventListener(\"resize\", updateDimensions);\n        return () => window.removeEventListener(\"resize\", updateDimensions);\n    }, []);\n\n    return (\n        <>\n        <style jsx>\n            {`\n                a {\n                    color: white; text-decoration: none;\n                }\n                @media (max-width: 768) {\n                    .pagination {font-size: 12px}\n\n                    .next,\n                    .prev {display: none}\n                }\n                @media (max-width: 768px) {\n                    .pagination {font-size: 14px}\n                }\n            `}\n        </style>\n\n        <ReactPaginate\n            forcePage={pageNumber === 1 ? 0 : pageNumber - 1}\n            marginPagesDisplayed={width < 576 ? 1 : 2}\n            pageRangeDisplayed={width < 576 ? 1 : 2}\n            pageCount={info?.pages}\n            onPageChange={pageChange}\n            className=\"pagination justify-content-center my-4 gap-4\"\n            nextLabel=\"Next\"\n            previousLabel=\"Prev\"\n            previousClassName=\"btn btn-primary fs-5 prev\"\n            nextClassName=\"btn btn-primary fs-5 next\"\n            activeClassName=\"active\"\n            pageClassName=\"page-item\"\n            pageLinkClassName=\"page-link\"\n        />\n        </>\n    );\n}\n\nexport default Pagination;","const FilterBTN = ({ input, task, updatePageNumber, index, name }) => {\n    return (\n        <div>\n            <style jsx>\n                {`\n                    .x:checked + label {\n                        background-color: #0b5ed7;\n                        color: white }\n                    input[type=\"radio\"] { display: none; }\n                `}\n            </style>\n            <div className=\"form-check\">\n                <input\n                    className=\"form-check-input x\" type=\"radio\"\n                    name={name} id={`${name}-${index}`}\n                />\n                <label\n                    onClick={(x) => {\n                        task(input); updatePageNumber(1);\n                    }}\n                    className=\"btn btn-outline-primary\"\n                    for={`${name}-${index}`}\n                    > {input}</label>\n            </div>\n        </div>\n    );\n};\n\nexport default FilterBTN;","import FilterBTN from \"../FilterBTN\";\n\nconst Gender = ({ updateGender, updatePageNumber }) => {\n    let genders = [\"female\", \"male\", \"genderless\", \"unknown\"];\n    return (\n        <div className=\"accordion-item\">\n            <h2 className=\"accordion-header\" id=\"headingThree\">\n                <button\n                    className=\"accordion-button collapsed\" type=\"button\"\n                    data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\"\n                    aria-expanded=\"false\" aria-controls=\"collapseThree\"\n                > Gender </button>\n            </h2>\n            <div id=\"collapseThree\" className=\"accordion-collapse collapse\"\n                aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\"\n            >\n                <div className=\"accordion-body d-flex flex-wrap gap-3\">\n                    {genders.map((items, index) => {\n                        return (\n                            <FilterBTN\n                                name=\"gender\" index={index} key={index}\n                                updatePageNumber={updatePageNumber}\n                                task={updateGender} input={items}\n                            />\n                        );\n                    })}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Gender;","import FilterBTN from \"../FilterBTN\";\n\nconst Species = ({ updateSpecies, updatePageNumber }) => {\n    let species = [\n        \"Human\", \"Alien\", \"Humanoid\",\n        \"Poopybutthole\", \"mythological\", \"Unknown\",\n        \"Animal\", \"Disease\", \"Robot\", \"Cronenberg\", \"Planet\"\n    ];\n\n    return (\n        <div className=\"accordion-item\">\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\n                <button\n                    className=\"accordion-button collapsed\" type=\"button\"\n                    data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\"\n                    aria-expanded=\"false\" aria-controls=\"collapseTwo\"\n                > Species </button>\n            </h2>\n            <div\n                id=\"collapseTwo\" className=\"accordion-collapse collapse\"\n                aria-labelledby=\"headingTwo\"\n                data-bs-parent=\"#accordionExample\"\n            >\n                <div className=\"accordion-body d-flex flex-wrap gap-3\">\n                    {species.map((item, index) => {\n                        return (\n                            <FilterBTN\n                                name=\"species\" index={index} key={index}\n                                updatePageNumber={updatePageNumber}\n                                task={updateSpecies} input={item}\n                            />\n                        )\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Species;","import FilterBTN from \"../FilterBTN\";\n\nconst Status = ({ updateStatus, updatePageNumber }) => {\n    let status = [\"Alive\", \"Dead\", \"Unknown\"];\n    return (\n        <div className=\"accordion-item\">\n            <h2 className=\"accordion-header\" id=\"headingOne\">\n                <button\n                    className=\"accordion-button\" type=\"button\"\n                    data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\"\n                    aria-expanded=\"true\" aria-controls=\"collapseOne\"\n                    > Status </button>\n            </h2>\n            <div\n                id=\"collapseOne\" className=\"accordion-collapse collapse show\"\n                aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\"\n            >\n                <div className=\"accordion-body d-flex flex-wrap gap-3\">\n                    {status.map((item, index) => (\n                        <FilterBTN\n                            key={index}\n                            index={index}\n                            name=\"status\"\n                            task={updateStatus}\n                            updatePageNumber={updatePageNumber}\n                            input={item}\n                        />\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Status;","import React from \"react\";\nimport Gender from \"./category/Gender\";\nimport Species from \"./category/Species\";\nimport Status from \"./category/Status\";\n\nconst Filter = ({\n    pageNumber, updatePageNumber,\n    updateStatus, updateGender,\n    updateSpecies,\n}) => {\n    let clear = () => {\n        updateStatus(\"\");\n        updateGender(\"\");\n        updateSpecies(\"\");\n        updatePageNumber(1);\n        window.location.reload(false);\n    };\n    return (\n        <div className=\"col-lg-3 col-12 mb-5\">\n            <div className=\"text-center fw-bold fs-4 mb-2\">Filters</div>\n            <div \n                style={{ cursor: \"pointer\" }} onClick={clear}\n                className=\"text-primary text-decoration-underline text-center-mb-3\"\n                >Clear Filters </div>\n                <div className=\"accordion\" id=\"accordionExample\">\n                    <Gender\n                        updatePageNumber={updatePageNumber}\n                        updateGender={updateGender}\n                    />\n                    <Species\n                        updatePageNumber={updatePageNumber}\n                        updateSpecies={updateSpecies}\n                    />\n                    <Status\n                        updatePageNumber={updatePageNumber}\n                        updateStatus={updateStatus}\n                    />\n                </div>\n        </div>\n    );\n};\n\nexport default Filter;","import { NavLink, Link } from \"react-router-dom\";\nimport \"../../App.css\";\n\nconst Navbar = () => {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-4\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"navbar-brand fs-3 ubuntu\">\n                    Rick & Morty <span ClassName=\"text-primary\">Wiki</span>\n                </Link>\n                <style jsx>{`\n                    button[aria-expanded=\"false\"]> .close {\n                        display: none;\n                    }\n                    button[aria-expanded=\"true\"]> .open {\n                        display: none;\n                    }\n                `}</style>\n            </div>\n            <button\n                className=\"navbar-toggler border-0\"\n                type=\"button\"\n                data-bs-toggle=\"collapse\"\n                data-bs-target=\"#navbarNavAltMarkup\"\n                aria-controls=\"navbarNavAltMarkup\"\n                aria-expanded=\"false\"\n                aria-label=\"Toggle navigation\"\n            >\n                <span class=\"fas fa-bars open text-dark\"></span>\n                <span class=\"fas fa-teims close text-dark\"></span>\n            </button>\n            <div\n                className=\"collapse navbar-collapse jusity-content-end\"\n                id=\"navbarNavAltMarkup\"\n            > \n            <div className=\"navbar-nav fs-5\">\n                    <NavLink to=\"/\" className=\"nav-link\">\n                        Characters\n                    </NavLink>\n                    <NavLink to=\"/episodes\" className=\"nav-link\">\n                        Episode\n                    </NavLink>\n                    <NavLink\n                        activeClassName=\"active\" className=\"nav-link\"\n                        to=\"/location\"\n                    >\n                        Location\n                    </NavLink>\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nexport default Navbar;","const InputGroup = ({ name, changeID, total }) => {\n    return <div className=\"input-group mb-3\">\n        <select\n            onChange={(e) => changeID(e.target.value)}\n            className=\"form-select\"\n            id={name}\n        >\n            <option value=\"1\">Choose...</option>\n            {[...Array(total).keys()].map((x, index) => {\n                return (\n                    <option value={x + 1}>\n                        {name} - {x + 1}\n                    </option>\n                )\n            })}\n        </select>\n    </div>\n};\n\nexport default InputGroup;","import React , { useEffect, useState } from \"react\";\nimport Card from \"../components/Card/Card\";\nimport InputGroup from \"../components/Filter/category/InputGroup\";\n\nconst Episodes = () => {\n    let [results, setResults] = React.useState([]);\n    let [info, setInfo] = useState([]);\n    let { air_date, episode, name } = info;\n    let [id, setID] = useState(1);\n\n    let api = `https://rickandmortyapi.com/api/episode/${id}`;\n\n    useEffect(() => {\n        (async function() {\n            let data = await fetch(api).then((res) => res.json());\n            setInfo(data);\n\n            let a = await Promise.all(\n                data.characters.map((x) => {\n                    return fetch(x).then((res) => res.json());\n                })\n            );\n            setResults(a);\n        })();\n    }, [api]);\n\n    return (\n        <div className=\"container\">\n            <div className=\"row mb-3\">\n                <h1 className=\"text-center mb-3\">\n                    Episode name :{\" \"}\n                    <span className=\"text0-primary\">{name === \"\" ? \"Unknown\" : name}</span>\n                </h1>\n                <h5 className=\"text-center\">\n                    Air Date: {air_date === \"\" ? \"Unknown\" : air_date}\n                </h5>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-lg-3 col-12 mb-4\">\n                    <h4 className=\"text-center mb-4\">Pick Episode</h4>\n                    <InputGroup name=\"Episodes\" changeID={setID} total={51} />\n                </div>\n                <div className=\"col-lg-8 col-12\">\n                    <div className=\"row\">\n                        <Card page=\"/episodes/\" results={results} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Episodes;","import React, { useEffect, useState } from \"react\";\nimport Card from \"../components/Card/Card\";\nimport InputGroup from \"../components/Filter/category/InputGroup\";\n\nconst Location = () => {\n    let [results, setResults] = useState([]);\n    let [info, setInfo] = useState([]);\n    let { dimension, type, name } = info;\n    let [number, setNumber] = useState(1);\n\n    let api = `https://rickandmortyapi.com/api/location/${number}`;\n\n    useEffect(() => {\n        (async function() {\n            let data = await fetch(api).then((res) => res.json());\n            setInfo(data);\n\n            let a = await Promise.all(\n                data.residents.map((x) => {\n                    return fetch(x).then((res) => res.json());\n                })\n            );\n            setResults(a);\n        })();\n    }, [api]);\n\n    return (\n        <div className=\"container\">\n            <div className=\"row mb-3\">\n                <h1 classNae=\"text-center mb-3\">\n                    Location :\n                    <span className=\"text-primary\">\n                        {\" \"}\n                        {name === \"\" ? \"Unknown\" : name}\n                    </span>\n                </h1>\n                <h5 className=\"text-center\">\n                    Dimension: {dimension === \"\" ? \"Unknown\" : dimension}\n                </h5>\n                <h6 className=\"text-center\">Type: {type === \"\" ? \"Unknown\" : type}</h6>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-lg-3 col-12 mb-4\">\n                    <h4 className=\"text-center mb-4\">Pick Location</h4>\n                    <InputGroup name=\"Location\" changeID={setNumber} total={126} />\n                </div>\n                <div className=\"row\">\n                    <Card page=\"/location/\" results={results} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Location;","import Reac, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\n\nconst CardDetails = () => {\n    let { id } = useParams();\n    let [fetchedData, updateFetchedDaata] = useState([]);\n    let { name, location, origin, gender, image, status, species } = fetchedData;\n\n    let api = `https://rickandmortyapi.com/api/characters/${id}`;\n\n    useEffect(() => {\n        (async function() {\n            let data = await fetch(api).then((res) => res.json());\n            updateFetchedDaata(data);\n        })();\n    }, [api]);\n\n    return (\n        <div className=\"container d-flex justify-content-center mb-5\">\n            <div className=\"d-flex flex-column gap-3\">\n                <h1 classname=\"text-center\">{name}</h1>\n                <img className=\"img-fluid\" src={image} alt=\"\" />\n                {(() => {\n                    if (status === \"Dead\") {\n                        return <div className=\"badge bg-danger fs-5\">{status}</div>;\n                    } else if (status === \"Alive\") {\n                        return <div className=\"badge bg-success fs-5\">{status}</div>;\n                    } else {\n                        return <div className=\"badge bg-secondary fs-5\">{status}</div>;\n                    }\n                })()}\n                <div className=\"content\">\n                    <div className=\"\">\n                        <span className=\"fw-bold\">Gender: </span>\n                        {gender}\n                    </div>\n                    <div className=\"\">\n                        <span className=\"fw-bold\">Location: </span>\n                        {location?.name}\n                    </div>\n                    <div className=\"\">\n                        <span className=\"fw-bold\">Origin: </span>\n                        {species}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CardDetails;","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Filter, Navbar, Pagination, Search } from \"./components/index\";\nimport Episodes from \"./Pages/Episodes\";\nimport Location from \"./Pages/Location\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport './App.css';\nimport CardDetails from \"./components/Card/CardDetails\";\n\nconst Home = () => {\n  let [fetchedData, updateFetchedData] = useState([]);\n  let { info, results } = fetchedData;\n  let [pageNumber, updatePageNumber] = useState(1);\n  let [search, setSearch] = useState(\"\");\n  let [status, updateStatus] = useState(\"\");\n  let [gender, updateGender] = useState(\"\");\n  let [species, updateSpecies] = useState(\"\");\n\n  let api = `https://rickandmortyapi.com/api/character/?page=${pageNumber}&name=${search}&status=${status}&gender=${gender}&species=${species}`;\n\n  useEffect(() => {\n    (async function() {\n      let data = await fetch(api).then((res) => res.json());\n      updateFetchedData(data);\n    })();\n    }, [api]);\n  \n  return (\n    <div className=\"App\">\n      <h1 className=\"text-center mb-3\">Characters</h1>\n      <div className=\"container\">\n        <div className=\"row\">\n          <h1 className=\"text-center mb-3\">Characters</h1>\n          <Search setSearch={setSearch} updatePageNumber={updatePageNumber} />\n          <Filter\n            pageNumber={pageNumber}\n            status={status}\n            updateStatus={updateStatus}\n            updateGender={updateGender}\n            updateSpecies={updateSpecies}\n            updatePageNumber={updatePageNumber}\n          />\n          <div className=\"col-lg-8 col-12\">\n            <div className=\"row\">\n              <Card page=\"/\" results={results} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <Pagination\n        info={info}\n        pageNumber={pageNumber}\n        updatePageNumber={updatePageNumber}\n      />\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n      </div>\n      <Routes>\n        <Route path=\"/rickandmortywiki\" element={<Home />} />\n        <Route path=\"/rickandmortywiki/:id\" element={<CardDetails />} />\n\n        <Route path=\"/rickandmortywiki/episodes\" element={<Episodes />} />\n        <Route path=\"/rickandmortywiki/episodes/:id\" element={<CardDetails />} />\n\n        <Route path=\"/rickandmortywiki/location\" element={<Location />} />\n        <Route path=\"/rickandmortywiki/location/:id\" element={<CardDetails />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}